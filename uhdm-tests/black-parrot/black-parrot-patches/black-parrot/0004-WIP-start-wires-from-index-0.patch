From a42626a8fdd6536fd57e4b33b93413b377507cfe Mon Sep 17 00:00:00 2001
From: Kamil Rakoczy <krakoczy@antmicro.com>
Date: Wed, 26 Apr 2023 15:05:45 +0200
Subject: [PATCH 4/4] WIP: start wires from index 0

Signed-off-by: Kamil Rakoczy <krakoczy@antmicro.com>
---
 bp_top/src/v/bp_cacc_complex.sv   |  53 +++++----
 bp_top/src/v/bp_core_complex.sv   |  83 +++++++------
 bp_top/src/v/bp_core_lite.sv      | 190 +++++++++++++++---------------
 bp_top/src/v/bp_core_tile_node.sv |  23 ++--
 bp_top/src/v/bp_io_complex.sv     |  49 ++++----
 bp_top/src/v/bp_io_tile_node.sv   |  23 ++--
 bp_top/src/v/bp_mem_complex.sv    |  65 +++++-----
 bp_top/src/v/bp_multicore.sv      |  90 +++++++-------
 bp_top/src/v/bp_sacc_complex.sv   |  31 +++--
 9 files changed, 331 insertions(+), 276 deletions(-)

diff --git a/bp_top/src/v/bp_cacc_complex.sv b/bp_top/src/v/bp_cacc_complex.sv
index 073aa544..83575666 100644
--- a/bp_top/src/v/bp_cacc_complex.sv
+++ b/bp_top/src/v/bp_cacc_complex.sv
@@ -12,6 +12,13 @@ module bp_cacc_complex
    `declare_bp_proc_params(bp_params_p)
 
    , localparam coh_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(coh_noc_flit_width_p)
+    //typedef enum logic[2:0] {P=3'd0, W, E, N, S} Dirs;
+    // recalculate assuming W = 0 and S = 0
+   , parameter logic [2:0] W2 = 0 /*W-W*/
+   , parameter logic [2:0] E2 = E-W
+   , parameter logic [2:0] S2 = 0 /*S-S*/
+   , parameter logic [2:0] N2 = S-N /*S is larger*/
+   , parameter logic [2:0] SW2 = S-W /*S is larger*/
    )
   (input                                                        core_clk_i
    , input                                                      core_reset_i
@@ -34,21 +41,21 @@ module bp_cacc_complex
 
   `declare_bsg_ready_and_link_sif_s(coh_noc_flit_width_p, bp_coh_ready_and_link_s);
 
-  bp_coh_ready_and_link_s [cac_y_dim_p-1:0][S:W] lce_req_link_li, lce_req_link_lo;
-  bp_coh_ready_and_link_s [E:W][cac_y_dim_p-1:0] lce_req_hor_link_li, lce_req_hor_link_lo;
-  bp_coh_ready_and_link_s [S:N] lce_req_ver_link_li, lce_req_ver_link_lo;
+  bp_coh_ready_and_link_s [cac_y_dim_p-1:0][SW2:0] lce_req_link_li, lce_req_link_lo;
+  bp_coh_ready_and_link_s [E2:W2][cac_y_dim_p-1:0] lce_req_hor_link_li, lce_req_hor_link_lo;
+  bp_coh_ready_and_link_s [N2:S2] lce_req_ver_link_li, lce_req_ver_link_lo;
 
-  bp_coh_ready_and_link_s [cac_y_dim_p-1:0][S:W] lce_cmd_link_li, lce_cmd_link_lo;
-  bp_coh_ready_and_link_s [E:W][cac_y_dim_p-1:0] lce_cmd_hor_link_li, lce_cmd_hor_link_lo;
-  bp_coh_ready_and_link_s [S:N] lce_cmd_ver_link_li, lce_cmd_ver_link_lo;
+  bp_coh_ready_and_link_s [cac_y_dim_p-1:0][SW2:0] lce_cmd_link_li, lce_cmd_link_lo;
+  bp_coh_ready_and_link_s [E2:W2][cac_y_dim_p-1:0] lce_cmd_hor_link_li, lce_cmd_hor_link_lo;
+  bp_coh_ready_and_link_s [N2:S2] lce_cmd_ver_link_li, lce_cmd_ver_link_lo;
 
-  bp_coh_ready_and_link_s [cac_y_dim_p-1:0][S:W] lce_fill_link_li, lce_fill_link_lo;
-  bp_coh_ready_and_link_s [E:W][cac_y_dim_p-1:0] lce_fill_hor_link_li, lce_fill_hor_link_lo;
-  bp_coh_ready_and_link_s [S:N] lce_fill_ver_link_li, lce_fill_ver_link_lo;
+  bp_coh_ready_and_link_s [cac_y_dim_p-1:0][SW2:0] lce_fill_link_li, lce_fill_link_lo;
+  bp_coh_ready_and_link_s [E2:W2][cac_y_dim_p-1:0] lce_fill_hor_link_li, lce_fill_hor_link_lo;
+  bp_coh_ready_and_link_s [N2:S2] lce_fill_ver_link_li, lce_fill_ver_link_lo;
 
-  bp_coh_ready_and_link_s [cac_y_dim_p-1:0][S:W] lce_resp_link_li, lce_resp_link_lo;
-  bp_coh_ready_and_link_s [E:W][cac_y_dim_p-1:0] lce_resp_hor_link_li, lce_resp_hor_link_lo;
-  bp_coh_ready_and_link_s [S:N] lce_resp_ver_link_li, lce_resp_ver_link_lo;
+  bp_coh_ready_and_link_s [cac_y_dim_p-1:0][SW2:0] lce_resp_link_li, lce_resp_link_lo;
+  bp_coh_ready_and_link_s [E2:W2][cac_y_dim_p-1:0] lce_resp_hor_link_li, lce_resp_hor_link_lo;
+  bp_coh_ready_and_link_s [N2:S2] lce_resp_ver_link_li, lce_resp_ver_link_lo;
 
 
   for (genvar j=0; j < cac_y_dim_p; j++)
@@ -92,8 +99,8 @@ module bp_cacc_complex
   if (cac_x_dim_p > 0)
     begin : ac_stitch
       assign lce_req_ver_link_li    = '0;
-      assign lce_req_hor_link_li[E] = '0;
-      assign lce_req_hor_link_li[W] = coh_req_link_i;
+      assign lce_req_hor_link_li[E2-1] = '0;
+      assign lce_req_hor_link_li[W2] = coh_req_link_i;
 
       bsg_mesh_stitch
        #(.width_p(coh_noc_ral_link_width_lp)
@@ -109,11 +116,11 @@ module bp_cacc_complex
          ,.ver_i(lce_req_ver_link_li)
          ,.ver_o(lce_req_ver_link_lo)
          );
-      assign coh_req_link_o = lce_req_hor_link_lo[W];
+      assign coh_req_link_o = lce_req_hor_link_lo[W2];
 
       assign lce_cmd_ver_link_li    = '0;
-      assign lce_cmd_hor_link_li[E] = '0;
-      assign lce_cmd_hor_link_li[W] = coh_cmd_link_i;
+      assign lce_cmd_hor_link_li[E2-1] = '0;
+      assign lce_cmd_hor_link_li[W2] = coh_cmd_link_i;
 
       bsg_mesh_stitch
        #(.width_p(coh_noc_ral_link_width_lp)
@@ -132,8 +139,8 @@ module bp_cacc_complex
       assign coh_cmd_link_o = lce_cmd_hor_link_lo[W];
 
       assign lce_fill_ver_link_li    = '0;
-      assign lce_fill_hor_link_li[E] = '0;
-      assign lce_fill_hor_link_li[W] = coh_fill_link_i;
+      assign lce_fill_hor_link_li[E2-1] = '0;
+      assign lce_fill_hor_link_li[W2] = coh_fill_link_i;
 
       bsg_mesh_stitch
        #(.width_p(coh_noc_ral_link_width_lp)
@@ -149,11 +156,11 @@ module bp_cacc_complex
          ,.ver_i(lce_fill_ver_link_li)
          ,.ver_o(lce_fill_ver_link_lo)
          );
-      assign coh_fill_link_o = lce_fill_hor_link_lo[W];
+      assign coh_fill_link_o = lce_fill_hor_link_lo[W2];
 
       assign lce_resp_ver_link_li    = '0;
-      assign lce_resp_hor_link_li[E] = '0;
-      assign lce_resp_hor_link_li[W] = coh_resp_link_i;
+      assign lce_resp_hor_link_li[E2-1] = '0;
+      assign lce_resp_hor_link_li[W2] = coh_resp_link_i;
 
       bsg_mesh_stitch
        #(.width_p(coh_noc_ral_link_width_lp)
@@ -169,7 +176,7 @@ module bp_cacc_complex
          ,.ver_i(lce_resp_ver_link_li)
          ,.ver_o(lce_resp_ver_link_lo)
          );
-      assign coh_resp_link_o = lce_resp_hor_link_lo[W];
+      assign coh_resp_link_o = lce_resp_hor_link_lo[W2];
 
     end
   else
diff --git a/bp_top/src/v/bp_core_complex.sv b/bp_top/src/v/bp_core_complex.sv
index e1f24ff8..6c584363 100644
--- a/bp_top/src/v/bp_core_complex.sv
+++ b/bp_top/src/v/bp_core_complex.sv
@@ -20,6 +20,13 @@ module bp_core_complex
 
    , localparam mem_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(mem_noc_flit_width_p)
    , localparam coh_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(coh_noc_flit_width_p)
+    //typedef enum logic[2:0] {P=3'd0, W, E, N, S} Dirs;
+    // recalculate assuming W = 0 and S = 0
+   , parameter logic [2:0] W2 = 0 /*W-W*/
+   , parameter logic [2:0] E2 = E-W
+   , parameter logic [2:0] S2 = 0 /*S-S*/
+   , parameter logic [2:0] N2 = S-N /*S is larger*/
+   , parameter logic [2:0] SW2 = S-W /*S is larger*/
    )
   (input                                                         core_clk_i
    , input                                                       rt_clk_i
@@ -34,59 +41,59 @@ module bp_core_complex
    , input [io_noc_did_width_p-1:0]                              my_did_i
    , input [io_noc_did_width_p-1:0]                              host_did_i
 
-   , input [E:W][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_req_hor_link_i
-   , output [E:W][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_req_hor_link_o
+   , input [E2:W2][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_req_hor_link_i
+   , output [E2:W2][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_req_hor_link_o
 
-   , input [E:W][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_cmd_hor_link_i
-   , output [E:W][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_cmd_hor_link_o
+   , input [E2:W2][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_cmd_hor_link_i
+   , output [E2:W2][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_cmd_hor_link_o
 
-   , input [E:W][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_fill_hor_link_i
-   , output [E:W][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_fill_hor_link_o
+   , input [E2:W2][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_fill_hor_link_i
+   , output [E2:W2][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_fill_hor_link_o
 
-   , input [E:W][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_resp_hor_link_i
-   , output [E:W][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_resp_hor_link_o
+   , input [E2:W2][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_resp_hor_link_i
+   , output [E2:W2][cc_y_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_resp_hor_link_o
 
-   , input [S:N][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_req_ver_link_i
-   , output [S:N][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_req_ver_link_o
+   , input [N2:S2][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_req_ver_link_i
+   , output [N2:S2][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_req_ver_link_o
 
-   , input [S:N][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_cmd_ver_link_i
-   , output [S:N][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_cmd_ver_link_o
+   , input [N2:S2][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_cmd_ver_link_i
+   , output [N2:S2][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_cmd_ver_link_o
 
-   , input [S:N][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_fill_ver_link_i
-   , output [S:N][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_fill_ver_link_o
+   , input [N2:S2][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_fill_ver_link_i
+   , output [N2:S2][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_fill_ver_link_o
 
-   , input [S:N][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_resp_ver_link_i
-   , output [S:N][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_resp_ver_link_o
+   , input [N2:S2][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]  coh_resp_ver_link_i
+   , output [N2:S2][cc_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0] coh_resp_ver_link_o
 
-   , input [N:N][cc_x_dim_p-1:0][mem_noc_ral_link_width_lp-1:0]  mem_fwd_ver_link_i
-   , output [S:S][cc_x_dim_p-1:0][mem_noc_ral_link_width_lp-1:0] mem_fwd_ver_link_o
+   , input [cc_x_dim_p-1:0][mem_noc_ral_link_width_lp-1:0]  mem_fwd_ver_link_i
+   , output [cc_x_dim_p-1:0][mem_noc_ral_link_width_lp-1:0] mem_fwd_ver_link_o
 
-   , input [S:S][cc_x_dim_p-1:0][mem_noc_ral_link_width_lp-1:0]  mem_rev_ver_link_i
-   , output [N:N][cc_x_dim_p-1:0][mem_noc_ral_link_width_lp-1:0] mem_rev_ver_link_o
+   , input [cc_x_dim_p-1:0][mem_noc_ral_link_width_lp-1:0]  mem_rev_ver_link_i
+   , output [cc_x_dim_p-1:0][mem_noc_ral_link_width_lp-1:0] mem_rev_ver_link_o
    );
 
   `declare_bp_cfg_bus_s(vaddr_width_p, hio_width_p, core_id_width_p, cce_id_width_p, lce_id_width_p);
   `declare_bsg_ready_and_link_sif_s(coh_noc_flit_width_p, coh_noc_ral_link_s);
   `declare_bsg_ready_and_link_sif_s(mem_noc_flit_width_p, mem_noc_ral_link_s);
 
-  coh_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][S:W] lce_req_link_lo, lce_req_link_li;
-  coh_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][S:W] lce_cmd_link_lo, lce_cmd_link_li;
-  coh_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][S:W] lce_fill_link_lo, lce_fill_link_li;
-  coh_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][S:W] lce_resp_link_lo, lce_resp_link_li;
+  coh_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][SW:0] lce_req_link_lo, lce_req_link_li;
+  coh_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][SW:0] lce_cmd_link_lo, lce_cmd_link_li;
+  coh_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][SW:0] lce_fill_link_lo, lce_fill_link_li;
+  coh_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][SW:0] lce_resp_link_lo, lce_resp_link_li;
 
-  mem_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][S:S] mem_fwd_link_lo, mem_rev_link_li;
-  mem_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][N:N] mem_rev_link_lo, mem_fwd_link_li;
+  mem_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0] mem_fwd_link_lo, mem_rev_link_li;
+  mem_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0] mem_rev_link_lo, mem_fwd_link_li;
 
-  coh_noc_ral_link_s [E:W][cc_y_dim_p-1:0] lce_req_hor_link_li, lce_req_hor_link_lo;
-  coh_noc_ral_link_s [S:N][cc_x_dim_p-1:0] lce_req_ver_link_li, lce_req_ver_link_lo;
-  coh_noc_ral_link_s [E:W][cc_y_dim_p-1:0] lce_cmd_hor_link_li, lce_cmd_hor_link_lo;
-  coh_noc_ral_link_s [S:N][cc_x_dim_p-1:0] lce_cmd_ver_link_li, lce_cmd_ver_link_lo;
-  coh_noc_ral_link_s [E:W][cc_y_dim_p-1:0] lce_fill_hor_link_li, lce_fill_hor_link_lo;
-  coh_noc_ral_link_s [S:N][cc_x_dim_p-1:0] lce_fill_ver_link_li, lce_fill_ver_link_lo;
-  coh_noc_ral_link_s [E:W][cc_y_dim_p-1:0] lce_resp_hor_link_li, lce_resp_hor_link_lo;
-  coh_noc_ral_link_s [S:N][cc_x_dim_p-1:0] lce_resp_ver_link_li, lce_resp_ver_link_lo;
+  coh_noc_ral_link_s [E2:W2][cc_y_dim_p-1:0] lce_req_hor_link_li, lce_req_hor_link_lo;
+  coh_noc_ral_link_s [N2:S2][cc_x_dim_p-1:0] lce_req_ver_link_li, lce_req_ver_link_lo;
+  coh_noc_ral_link_s [E2:W2][cc_y_dim_p-1:0] lce_cmd_hor_link_li, lce_cmd_hor_link_lo;
+  coh_noc_ral_link_s [N2:S2][cc_x_dim_p-1:0] lce_cmd_ver_link_li, lce_cmd_ver_link_lo;
+  coh_noc_ral_link_s [E2:W2][cc_y_dim_p-1:0] lce_fill_hor_link_li, lce_fill_hor_link_lo;
+  coh_noc_ral_link_s [N2:S2][cc_x_dim_p-1:0] lce_fill_ver_link_li, lce_fill_ver_link_lo;
+  coh_noc_ral_link_s [E2:W2][cc_y_dim_p-1:0] lce_resp_hor_link_li, lce_resp_hor_link_lo;
+  coh_noc_ral_link_s [N2:S2][cc_x_dim_p-1:0] lce_resp_ver_link_li, lce_resp_ver_link_lo;
 
-  mem_noc_ral_link_s [S:N][cc_x_dim_p-1:0] mem_ver_link_lo, mem_ver_link_li;
+  mem_noc_ral_link_s [N2:S2][cc_x_dim_p-1:0] mem_ver_link_lo, mem_ver_link_li;
 
   for (genvar j = 0; j < cc_y_dim_p; j++)
     begin : y
@@ -207,12 +214,12 @@ module bp_core_complex
     assign coh_resp_hor_link_o = lce_resp_hor_link_lo;
     assign coh_resp_ver_link_o = lce_resp_ver_link_lo;
 
-    mem_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][S:W] mem_mesh_lo, mem_mesh_li;
+    mem_noc_ral_link_s [cc_y_dim_p-1:0][cc_x_dim_p-1:0][SW:0] mem_mesh_lo, mem_mesh_li;
     for (genvar i = 0; i < cc_y_dim_p; i++)
       for (genvar j = 0; j < cc_x_dim_p; j++)
         begin : link
-          assign mem_mesh_lo[i][j][S] = mem_fwd_link_lo[i][j];
-          assign mem_mesh_lo[i][j][N] = mem_rev_link_lo[i][j];
+          assign mem_mesh_lo[i][j][N2] = mem_fwd_link_lo[i][j];
+          assign mem_mesh_lo[i][j][S2] = mem_rev_link_lo[i][j];
 
           assign mem_fwd_link_li[i][j] = mem_mesh_li[i][j][N];
           assign mem_rev_link_li[i][j] = mem_mesh_li[i][j][S];
diff --git a/bp_top/src/v/bp_core_lite.sv b/bp_top/src/v/bp_core_lite.sv
index 4fe0675f..f3b9ed4b 100644
--- a/bp_top/src/v/bp_core_lite.sv
+++ b/bp_top/src/v/bp_core_lite.sv
@@ -294,50 +294,50 @@ module bp_core_lite
      ,.lce_resp_data_ready_and_i(lce_resp_data_ready_and_i[0])
      );
 
-  logic [1:1][lce_req_header_width_lp-1:0]  _lce_req_header_o;
-  logic [1:1]                               _lce_req_header_v_o;
-  logic [1:1]                               _lce_req_header_ready_and_i;
-  logic [1:1]                               _lce_req_has_data_o;
-  logic [1:1][icache_fill_width_p-1:0]      _lce_req_data_o;
-  logic [1:1]                               _lce_req_data_v_o;
-  logic [1:1]                               _lce_req_data_ready_and_i;
-  logic [1:1]                               _lce_req_last_o;
-
-  logic [1:1][lce_cmd_header_width_lp-1:0]  _lce_cmd_header_i;
-  logic [1:1]                               _lce_cmd_header_v_i;
-  logic [1:1]                               _lce_cmd_header_ready_and_o;
-  logic [1:1]                               _lce_cmd_has_data_i;
-  logic [1:1][icache_fill_width_p-1:0]      _lce_cmd_data_i;
-  logic [1:1]                               _lce_cmd_data_v_i;
-  logic [1:1]                               _lce_cmd_data_ready_and_o;
-  logic [1:1]                               _lce_cmd_last_i;
-
-  logic [1:1][lce_fill_header_width_lp-1:0] _lce_fill_header_i;
-  logic [1:1]                               _lce_fill_header_v_i;
-  logic [1:1]                               _lce_fill_header_ready_and_o;
-  logic [1:1]                               _lce_fill_has_data_i;
-  logic [1:1][icache_fill_width_p-1:0]      _lce_fill_data_i;
-  logic [1:1]                               _lce_fill_data_v_i;
-  logic [1:1]                               _lce_fill_data_ready_and_o;
-  logic [1:1]                               _lce_fill_last_i;
-
-  logic [1:1][lce_fill_header_width_lp-1:0] _lce_fill_header_o;
-  logic [1:1]                               _lce_fill_header_v_o;
-  logic [1:1]                               _lce_fill_header_ready_and_i;
-  logic [1:1]                               _lce_fill_has_data_o;
-  logic [1:1][icache_fill_width_p-1:0]      _lce_fill_data_o;
-  logic [1:1]                               _lce_fill_data_v_o;
-  logic [1:1]                               _lce_fill_data_ready_and_i;
-  logic [1:1]                               _lce_fill_last_o;
-
-  logic [1:1][lce_resp_header_width_lp-1:0] _lce_resp_header_o;
-  logic [1:1]                               _lce_resp_header_v_o;
-  logic [1:1]                               _lce_resp_header_ready_and_i;
-  logic [1:1]                               _lce_resp_has_data_o;
-  logic [1:1][icache_fill_width_p-1:0]      _lce_resp_data_o;
-  logic [1:1]                               _lce_resp_data_v_o;
-  logic [1:1]                               _lce_resp_data_ready_and_i;
-  logic [1:1]                               _lce_resp_last_o;
+  logic [lce_req_header_width_lp-1:0]  _lce_req_header_o;
+  logic                                _lce_req_header_v_o;
+  logic                                _lce_req_header_ready_and_i;
+  logic                                _lce_req_has_data_o;
+  logic [icache_fill_width_p-1:0]      _lce_req_data_o;
+  logic                                _lce_req_data_v_o;
+  logic                                _lce_req_data_ready_and_i;
+  logic                                _lce_req_last_o;
+
+  logic [lce_cmd_header_width_lp-1:0]  _lce_cmd_header_i;
+  logic                                _lce_cmd_header_v_i;
+  logic                                _lce_cmd_header_ready_and_o;
+  logic                                _lce_cmd_has_data_i;
+  logic [icache_fill_width_p-1:0]      _lce_cmd_data_i;
+  logic                                _lce_cmd_data_v_i;
+  logic                                _lce_cmd_data_ready_and_o;
+  logic                                _lce_cmd_last_i;
+
+  logic [lce_fill_header_width_lp-1:0] _lce_fill_header_i;
+  logic                                _lce_fill_header_v_i;
+  logic                                _lce_fill_header_ready_and_o;
+  logic                                _lce_fill_has_data_i;
+  logic [icache_fill_width_p-1:0]      _lce_fill_data_i;
+  logic                                _lce_fill_data_v_i;
+  logic                                _lce_fill_data_ready_and_o;
+  logic                                _lce_fill_last_i;
+
+  logic [lce_fill_header_width_lp-1:0] _lce_fill_header_o;
+  logic                                _lce_fill_header_v_o;
+  logic                                _lce_fill_header_ready_and_i;
+  logic                                _lce_fill_has_data_o;
+  logic [icache_fill_width_p-1:0]      _lce_fill_data_o;
+  logic                                _lce_fill_data_v_o;
+  logic                                _lce_fill_data_ready_and_i;
+  logic                                _lce_fill_last_o;
+
+  logic [lce_resp_header_width_lp-1:0] _lce_resp_header_o;
+  logic                                _lce_resp_header_v_o;
+  logic                                _lce_resp_header_ready_and_i;
+  logic                                _lce_resp_has_data_o;
+  logic [icache_fill_width_p-1:0]      _lce_resp_data_o;
+  logic                                _lce_resp_data_v_o;
+  logic                                _lce_resp_data_ready_and_i;
+  logic                                _lce_resp_last_o;
   bp_lce
    #(.bp_params_p(bp_params_p)
      ,.assoc_p(dcache_assoc_p)
@@ -383,50 +383,50 @@ module bp_core_lite
      ,.stat_mem_pkt_yumi_i(dcache_stat_mem_pkt_yumi_lo)
      ,.stat_mem_i(dcache_stat_mem_lo)
 
-     ,.lce_req_header_o(_lce_req_header_o[1])
-     ,.lce_req_header_v_o(_lce_req_header_v_o[1])
-     ,.lce_req_has_data_o(_lce_req_has_data_o[1])
-     ,.lce_req_header_ready_and_i(_lce_req_header_ready_and_i[1])
-     ,.lce_req_data_o(_lce_req_data_o[1])
-     ,.lce_req_data_v_o(_lce_req_data_v_o[1])
-     ,.lce_req_last_o(_lce_req_last_o[1])
-     ,.lce_req_data_ready_and_i(_lce_req_data_ready_and_i[1])
-
-     ,.lce_cmd_header_i(_lce_cmd_header_i[1])
-     ,.lce_cmd_header_v_i(_lce_cmd_header_v_i[1])
-     ,.lce_cmd_has_data_i(_lce_cmd_has_data_i[1])
-     ,.lce_cmd_header_ready_and_o(_lce_cmd_header_ready_and_o[1])
-     ,.lce_cmd_data_i(_lce_cmd_data_i[1])
-     ,.lce_cmd_data_v_i(_lce_cmd_data_v_i[1])
-     ,.lce_cmd_last_i(_lce_cmd_last_i[1])
-     ,.lce_cmd_data_ready_and_o(_lce_cmd_data_ready_and_o[1])
-
-     ,.lce_fill_header_i(_lce_fill_header_i[1])
-     ,.lce_fill_header_v_i(_lce_fill_header_v_i[1])
-     ,.lce_fill_has_data_i(_lce_fill_has_data_i[1])
-     ,.lce_fill_header_ready_and_o(_lce_fill_header_ready_and_o[1])
-     ,.lce_fill_data_i(_lce_fill_data_i[1])
-     ,.lce_fill_data_v_i(_lce_fill_data_v_i[1])
-     ,.lce_fill_last_i(_lce_fill_last_i[1])
-     ,.lce_fill_data_ready_and_o(_lce_fill_data_ready_and_o[1])
-
-     ,.lce_fill_header_o(_lce_fill_header_o[1])
-     ,.lce_fill_header_v_o(_lce_fill_header_v_o[1])
-     ,.lce_fill_has_data_o(_lce_fill_has_data_o[1])
-     ,.lce_fill_header_ready_and_i(_lce_fill_header_ready_and_i[1])
-     ,.lce_fill_data_o(_lce_fill_data_o[1])
-     ,.lce_fill_data_v_o(_lce_fill_data_v_o[1])
-     ,.lce_fill_last_o(_lce_fill_last_o[1])
-     ,.lce_fill_data_ready_and_i(_lce_fill_data_ready_and_i[1])
-
-     ,.lce_resp_header_o(_lce_resp_header_o[1])
-     ,.lce_resp_header_v_o(_lce_resp_header_v_o[1])
-     ,.lce_resp_has_data_o(_lce_resp_has_data_o[1])
-     ,.lce_resp_header_ready_and_i(_lce_resp_header_ready_and_i[1])
-     ,.lce_resp_data_o(_lce_resp_data_o[1])
-     ,.lce_resp_data_v_o(_lce_resp_data_v_o[1])
-     ,.lce_resp_last_o(_lce_resp_last_o[1])
-     ,.lce_resp_data_ready_and_i(_lce_resp_data_ready_and_i[1])
+     ,.lce_req_header_o(_lce_req_header_o)
+     ,.lce_req_header_v_o(_lce_req_header_v_o)
+     ,.lce_req_has_data_o(_lce_req_has_data_o)
+     ,.lce_req_header_ready_and_i(_lce_req_header_ready_and_i)
+     ,.lce_req_data_o(_lce_req_data_o)
+     ,.lce_req_data_v_o(_lce_req_data_v_o)
+     ,.lce_req_last_o(_lce_req_last_o)
+     ,.lce_req_data_ready_and_i(_lce_req_data_ready_and_i)
+
+     ,.lce_cmd_header_i(_lce_cmd_header_i)
+     ,.lce_cmd_header_v_i(_lce_cmd_header_v_i)
+     ,.lce_cmd_has_data_i(_lce_cmd_has_data_i)
+     ,.lce_cmd_header_ready_and_o(_lce_cmd_header_ready_and_o)
+     ,.lce_cmd_data_i(_lce_cmd_data_i)
+     ,.lce_cmd_data_v_i(_lce_cmd_data_v_i)
+     ,.lce_cmd_last_i(_lce_cmd_last_i)
+     ,.lce_cmd_data_ready_and_o(_lce_cmd_data_ready_and_o)
+
+     ,.lce_fill_header_i(_lce_fill_header_i)
+     ,.lce_fill_header_v_i(_lce_fill_header_v_i)
+     ,.lce_fill_has_data_i(_lce_fill_has_data_i)
+     ,.lce_fill_header_ready_and_o(_lce_fill_header_ready_and_o)
+     ,.lce_fill_data_i(_lce_fill_data_i)
+     ,.lce_fill_data_v_i(_lce_fill_data_v_i)
+     ,.lce_fill_last_i(_lce_fill_last_i)
+     ,.lce_fill_data_ready_and_o(_lce_fill_data_ready_and_o)
+
+     ,.lce_fill_header_o(_lce_fill_header_o)
+     ,.lce_fill_header_v_o(_lce_fill_header_v_o)
+     ,.lce_fill_has_data_o(_lce_fill_has_data_o)
+     ,.lce_fill_header_ready_and_i(_lce_fill_header_ready_and_i)
+     ,.lce_fill_data_o(_lce_fill_data_o)
+     ,.lce_fill_data_v_o(_lce_fill_data_v_o)
+     ,.lce_fill_last_o(_lce_fill_last_o)
+     ,.lce_fill_data_ready_and_i(_lce_fill_data_ready_and_i)
+
+     ,.lce_resp_header_o(_lce_resp_header_o)
+     ,.lce_resp_header_v_o(_lce_resp_header_v_o)
+     ,.lce_resp_has_data_o(_lce_resp_has_data_o)
+     ,.lce_resp_header_ready_and_i(_lce_resp_header_ready_and_i)
+     ,.lce_resp_data_o(_lce_resp_data_o)
+     ,.lce_resp_data_v_o(_lce_resp_data_v_o)
+     ,.lce_resp_last_o(_lce_resp_last_o)
+     ,.lce_resp_data_ready_and_i(_lce_resp_data_ready_and_i)
      );
 
   bsg_edge_extend
@@ -434,15 +434,15 @@ module bp_core_lite
    posedge_extend
     (.clk_i(posedge_clk)
      ,.reset_i(reset_i)
-     ,.data_i({_lce_req_header_o[1], _lce_req_header_v_o[1], _lce_req_has_data_o[1], _lce_req_data_o[1], _lce_req_data_v_o[1], _lce_req_last_o[1]
-               ,_lce_fill_header_o[1], _lce_fill_header_v_o[1], _lce_fill_has_data_o[1], _lce_fill_data_o[1], _lce_fill_data_v_o[1], _lce_fill_last_o[1]
-               ,_lce_resp_header_o[1], _lce_resp_header_v_o[1], _lce_resp_has_data_o[1], _lce_resp_data_o[1], _lce_resp_data_v_o[1], _lce_resp_last_o[1]
+     ,.data_i({_lce_req_header_o, _lce_req_header_v_o, _lce_req_has_data_o, _lce_req_data_o, _lce_req_data_v_o, _lce_req_last_o
+               ,_lce_fill_header_o, _lce_fill_header_v_o, _lce_fill_has_data_o, _lce_fill_data_o, _lce_fill_data_v_o, _lce_fill_last_o
+               ,_lce_resp_header_o, _lce_resp_header_v_o, _lce_resp_has_data_o, _lce_resp_data_o, _lce_resp_data_v_o, _lce_resp_last_o
                ,lce_req_header_ready_and_i[1], lce_req_data_ready_and_i[1], lce_fill_header_ready_and_i[1], lce_fill_data_ready_and_i[1], lce_resp_header_ready_and_i[1], lce_resp_data_ready_and_i[1]
                })
      ,.data_o({lce_req_header_o[1], lce_req_header_v_o[1], lce_req_has_data_o[1], lce_req_data_o[1], lce_req_data_v_o[1], lce_req_last_o[1]
                ,lce_fill_header_o[1], lce_fill_header_v_o[1], lce_fill_has_data_o[1], lce_fill_data_o[1], lce_fill_data_v_o[1], lce_fill_last_o[1]
                ,lce_resp_header_o[1], lce_resp_header_v_o[1], lce_resp_has_data_o[1], lce_resp_data_o[1], lce_resp_data_v_o[1], lce_resp_last_o[1]
-               ,_lce_req_header_ready_and_i[1], _lce_req_data_ready_and_i[1], _lce_fill_header_ready_and_i[1], _lce_fill_data_ready_and_i[1], _lce_resp_header_ready_and_i[1], _lce_resp_data_ready_and_i[1]
+               ,_lce_req_header_ready_and_i, _lce_req_data_ready_and_i, _lce_fill_header_ready_and_i, _lce_fill_data_ready_and_i, _lce_resp_header_ready_and_i, _lce_resp_data_ready_and_i
                })
      );
 
@@ -453,10 +453,10 @@ module bp_core_lite
      ,.reset_i(reset_i)
      ,.data_i({lce_cmd_header_i[1], lce_cmd_header_v_i[1], lce_cmd_has_data_i[1], lce_cmd_data_i[1], lce_cmd_data_v_i[1], lce_cmd_last_i[1]
                ,lce_fill_header_i[1], lce_fill_header_v_i[1], lce_fill_has_data_i[1], lce_fill_data_i[1], lce_fill_data_v_i[1], lce_fill_last_i[1]
-               ,_lce_cmd_header_ready_and_o[1], _lce_cmd_data_ready_and_o[1], _lce_fill_header_ready_and_o[1], _lce_fill_data_ready_and_o[1]
+               ,_lce_cmd_header_ready_and_o, _lce_cmd_data_ready_and_o, _lce_fill_header_ready_and_o, _lce_fill_data_ready_and_o
                })
-     ,.data_o({_lce_cmd_header_i[1], _lce_cmd_header_v_i[1], _lce_cmd_has_data_i[1], _lce_cmd_data_i[1], _lce_cmd_data_v_i[1], _lce_cmd_last_i[1]
-               ,_lce_fill_header_i[1], _lce_fill_header_v_i[1], _lce_fill_has_data_i[1], _lce_fill_data_i[1], _lce_fill_data_v_i[1], _lce_fill_last_i[1]
+     ,.data_o({_lce_cmd_header_i, _lce_cmd_header_v_i, _lce_cmd_has_data_i, _lce_cmd_data_i, _lce_cmd_data_v_i, _lce_cmd_last_i
+               ,_lce_fill_header_i, _lce_fill_header_v_i, _lce_fill_has_data_i, _lce_fill_data_i, _lce_fill_data_v_i, _lce_fill_last_i
                ,lce_cmd_header_ready_and_o[1], lce_cmd_data_ready_and_o[1], lce_fill_header_ready_and_o[1], lce_fill_data_ready_and_o[1]
                })
      );
diff --git a/bp_top/src/v/bp_core_tile_node.sv b/bp_top/src/v/bp_core_tile_node.sv
index 6d37ea15..d992121d 100644
--- a/bp_top/src/v/bp_core_tile_node.sv
+++ b/bp_top/src/v/bp_core_tile_node.sv
@@ -19,6 +19,13 @@ module bp_core_tile_node
 
    , localparam coh_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(coh_noc_flit_width_p)
    , localparam mem_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(mem_noc_flit_width_p)
+    //typedef enum logic[2:0] {P=3'd0, W, E, N, S} Dirs;
+    // recalculate assuming W = 0 and S = 0
+   , parameter logic [2:0] W2 = 0 /*W-W*/
+   , parameter logic [2:0] E2 = E-W
+   , parameter logic [2:0] S2 = 0 /*S-S*/
+   , parameter logic [2:0] N2 = S-N /*S is larger*/
+   , parameter logic [2:0] SW2 = S-W /*S is larger*/
    )
   (input                                         core_clk_i
    , input                                       rt_clk_i
@@ -36,17 +43,17 @@ module bp_core_tile_node
    , input [coh_noc_cord_width_p-1:0]            my_cord_i
 
    // Connected to other tiles on east and west
-   , input [S:W][coh_noc_ral_link_width_lp-1:0]  coh_lce_req_link_i
-   , output [S:W][coh_noc_ral_link_width_lp-1:0] coh_lce_req_link_o
+   , input [SW2:0][coh_noc_ral_link_width_lp-1:0]  coh_lce_req_link_i
+   , output [SW2:0][coh_noc_ral_link_width_lp-1:0] coh_lce_req_link_o
 
-   , input [S:W][coh_noc_ral_link_width_lp-1:0]  coh_lce_cmd_link_i
-   , output [S:W][coh_noc_ral_link_width_lp-1:0] coh_lce_cmd_link_o
+   , input [SW2:0][coh_noc_ral_link_width_lp-1:0]  coh_lce_cmd_link_i
+   , output [SW2:0][coh_noc_ral_link_width_lp-1:0] coh_lce_cmd_link_o
 
-   , input [S:W][coh_noc_ral_link_width_lp-1:0]  coh_lce_fill_link_i
-   , output [S:W][coh_noc_ral_link_width_lp-1:0] coh_lce_fill_link_o
+   , input [SW2:0][coh_noc_ral_link_width_lp-1:0]  coh_lce_fill_link_i
+   , output [SW2:0][coh_noc_ral_link_width_lp-1:0] coh_lce_fill_link_o
 
-   , input [S:W][coh_noc_ral_link_width_lp-1:0]  coh_lce_resp_link_i
-   , output [S:W][coh_noc_ral_link_width_lp-1:0] coh_lce_resp_link_o
+   , input [SW2:0][coh_noc_ral_link_width_lp-1:0]  coh_lce_resp_link_i
+   , output [SW2:0][coh_noc_ral_link_width_lp-1:0] coh_lce_resp_link_o
 
    , input [mem_noc_ral_link_width_lp-1:0]       mem_fwd_link_i
    , output [mem_noc_ral_link_width_lp-1:0]      mem_fwd_link_o
diff --git a/bp_top/src/v/bp_io_complex.sv b/bp_top/src/v/bp_io_complex.sv
index d1eb12c7..7ab31834 100644
--- a/bp_top/src/v/bp_io_complex.sv
+++ b/bp_top/src/v/bp_io_complex.sv
@@ -13,6 +13,13 @@ module bp_io_complex
 
    , localparam coh_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(coh_noc_flit_width_p)
    , localparam io_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(io_noc_flit_width_p)
+    //typedef enum logic[2:0] {P=3'd0, W, E, N, S} Dirs;
+    // recalculate assuming W = 0 and S = 0
+   , parameter logic [2:0] W2 = 0 /*W-W*/
+   , parameter logic [2:0] E2 = E-W
+   , parameter logic [2:0] S2 = 0 /*S-S*/
+   , parameter logic [2:0] N2 = S-N /*S is larger*/
+   , parameter logic [2:0] SW2 = S-W /*S is larger*/
    )
   (input                                                         core_clk_i
    , input                                                       core_reset_i
@@ -32,21 +39,21 @@ module bp_io_complex
    , input [ic_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]       coh_cmd_link_i
    , output [ic_x_dim_p-1:0][coh_noc_ral_link_width_lp-1:0]      coh_cmd_link_o
 
-   , input [E:W][io_noc_ral_link_width_lp-1:0]                   io_fwd_link_i
-   , output [E:W][io_noc_ral_link_width_lp-1:0]                  io_fwd_link_o
+   , input [E2:W2][io_noc_ral_link_width_lp-1:0]                   io_fwd_link_i
+   , output [E2:W2][io_noc_ral_link_width_lp-1:0]                  io_fwd_link_o
 
-   , input [E:W][io_noc_ral_link_width_lp-1:0]                   io_rev_link_i
-   , output [E:W][io_noc_ral_link_width_lp-1:0]                  io_rev_link_o
+   , input [E2:W2][io_noc_ral_link_width_lp-1:0]                   io_rev_link_i
+   , output [E2:W2][io_noc_ral_link_width_lp-1:0]                  io_rev_link_o
    );
 
   `declare_bsg_ready_and_link_sif_s(coh_noc_flit_width_p, bp_coh_ready_and_link_s);
   `declare_bsg_ready_and_link_sif_s(io_noc_flit_width_p, bp_io_ready_and_link_s);
 
-  bp_io_ready_and_link_s [ic_x_dim_p-1:0][E:W]  io_fwd_link_li, io_fwd_link_lo, io_rev_link_li, io_rev_link_lo;
-  bp_io_ready_and_link_s [E:W]                  io_fwd_hor_link_li, io_fwd_hor_link_lo, io_rev_hor_link_li, io_rev_hor_link_lo;
-  bp_coh_ready_and_link_s [ic_x_dim_p-1:0][S:W] lce_req_link_li, lce_req_link_lo, lce_cmd_link_li, lce_cmd_link_lo;
-  bp_coh_ready_and_link_s [S:N][ic_x_dim_p-1:0] lce_req_ver_link_li, lce_req_ver_link_lo, lce_cmd_ver_link_li, lce_cmd_ver_link_lo;
-  bp_coh_ready_and_link_s [E:W]                 lce_req_hor_link_li, lce_req_hor_link_lo, lce_cmd_hor_link_li, lce_cmd_hor_link_lo;
+  bp_io_ready_and_link_s [ic_x_dim_p-1:0][E2:W2]  io_fwd_link_li, io_fwd_link_lo, io_rev_link_li, io_rev_link_lo;
+  bp_io_ready_and_link_s [E2:W2]                  io_fwd_hor_link_li, io_fwd_hor_link_lo, io_rev_hor_link_li, io_rev_hor_link_lo;
+  bp_coh_ready_and_link_s [ic_x_dim_p-1:0][SW:0] lce_req_link_li, lce_req_link_lo, lce_cmd_link_li, lce_cmd_link_lo;
+  bp_coh_ready_and_link_s [N2:S2][ic_x_dim_p-1:0] lce_req_ver_link_li, lce_req_ver_link_lo, lce_cmd_ver_link_li, lce_cmd_ver_link_lo;
+  bp_coh_ready_and_link_s [E2:W2]                 lce_req_hor_link_li, lce_req_hor_link_lo, lce_cmd_hor_link_li, lce_cmd_hor_link_lo;
 
   for (genvar i = 0; i < ic_x_dim_p; i++)
     begin : node
@@ -81,8 +88,8 @@ module bp_io_complex
          );
     end
 
-  assign lce_req_ver_link_li[N] = '0;
-  assign lce_req_ver_link_li[S] = coh_req_link_i;
+  assign lce_req_ver_link_li[S2] = '0;
+  assign lce_req_ver_link_li[N2-1] = coh_req_link_i;
   assign lce_req_hor_link_li    = '0;
   bsg_mesh_stitch
    #(.width_p(coh_noc_ral_link_width_lp)
@@ -98,10 +105,10 @@ module bp_io_complex
      ,.ver_i(lce_req_ver_link_li)
      ,.ver_o(lce_req_ver_link_lo)
      );
-  assign coh_req_link_o = lce_req_ver_link_lo[S];
+  assign coh_req_link_o = lce_req_ver_link_lo[N2-1];
 
-  assign lce_cmd_ver_link_li[N] = '0;
-  assign lce_cmd_ver_link_li[S] = coh_cmd_link_i;
+  assign lce_cmd_ver_link_li[S2] = '0;
+  assign lce_cmd_ver_link_li[N2-1] = coh_cmd_link_i;
   assign lce_cmd_hor_link_li    = '0;
   bsg_mesh_stitch
    #(.width_p(coh_noc_ral_link_width_lp)
@@ -117,13 +124,13 @@ module bp_io_complex
      ,.ver_i(lce_cmd_ver_link_li)
      ,.ver_o(lce_cmd_ver_link_lo)
      );
-  assign coh_cmd_link_o = lce_cmd_ver_link_lo[S];
+  assign coh_cmd_link_o = lce_cmd_ver_link_lo[N2-1];
 
-  bp_io_ready_and_link_s [ic_x_dim_p-1:0][S:W] io_fwd_mesh_lo, io_fwd_mesh_li;
+  bp_io_ready_and_link_s [ic_x_dim_p-1:0][SW:0] io_fwd_mesh_lo, io_fwd_mesh_li;
   for (genvar i = 0; i < ic_x_dim_p; i++)
     begin : cmd_link
-      assign io_fwd_mesh_lo[i][E:W] = io_fwd_link_lo[i][E:W];
-      assign io_fwd_link_li[i][E:W] = io_fwd_mesh_li[i][E:W];
+      assign io_fwd_mesh_lo[i][E2:W2] = io_fwd_link_lo[i][E2:W2];
+      assign io_fwd_link_li[i][E2:W2] = io_fwd_mesh_li[i][E2:W2];
     end
   assign io_fwd_hor_link_li = io_fwd_link_i;
   bsg_mesh_stitch
@@ -142,11 +149,11 @@ module bp_io_complex
      );
   assign io_fwd_link_o  = io_fwd_hor_link_lo;
 
-  bp_io_ready_and_link_s [ic_x_dim_p-1:0][S:W] io_rev_mesh_lo, io_rev_mesh_li;
+  bp_io_ready_and_link_s [ic_x_dim_p-1:0][SW:0] io_rev_mesh_lo, io_rev_mesh_li;
   for (genvar i = 0; i < ic_x_dim_p; i++)
     begin : resp_link
-      assign io_rev_mesh_lo[i][E:W] = io_rev_link_lo[i][E:W];
-      assign io_rev_link_li[i][E:W] = io_rev_mesh_li[i][E:W];
+      assign io_rev_mesh_lo[i][E2:W2] = io_rev_link_lo[i][E2:W2];
+      assign io_rev_link_li[i][E2:W2] = io_rev_mesh_li[i][E2:W2];
     end
   assign io_rev_hor_link_li = io_rev_link_i;
   bsg_mesh_stitch
diff --git a/bp_top/src/v/bp_io_tile_node.sv b/bp_top/src/v/bp_io_tile_node.sv
index 1d6493a0..0fead623 100644
--- a/bp_top/src/v/bp_io_tile_node.sv
+++ b/bp_top/src/v/bp_io_tile_node.sv
@@ -13,6 +13,13 @@ module bp_io_tile_node
 
    , localparam coh_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(coh_noc_flit_width_p)
    , localparam io_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(io_noc_flit_width_p)
+    //typedef enum logic[2:0] {P=3'd0, W, E, N, S} Dirs;
+    // recalculate assuming W = 0 and S = 0
+   , parameter logic [2:0] W2 = 0 /*W-W*/
+   , parameter logic [2:0] E2 = E-W
+   , parameter logic [2:0] S2 = 0 /*S-S*/
+   , parameter logic [2:0] N2 = S-N /*S is larger*/
+   , parameter logic [2:0] SW2 = S-W /*S is larger*/
    )
   (input                                         core_clk_i
    , input                                       core_reset_i
@@ -27,17 +34,17 @@ module bp_io_tile_node
    , input [io_noc_did_width_p-1:0]              host_did_i
    , input [coh_noc_cord_width_p-1:0]            my_cord_i
 
-   , input [S:W][coh_noc_ral_link_width_lp-1:0]  coh_lce_req_link_i
-   , output [S:W][coh_noc_ral_link_width_lp-1:0] coh_lce_req_link_o
+   , input [SW:0][coh_noc_ral_link_width_lp-1:0]  coh_lce_req_link_i
+   , output [SW:0][coh_noc_ral_link_width_lp-1:0] coh_lce_req_link_o
 
-   , input [S:W][coh_noc_ral_link_width_lp-1:0]  coh_lce_cmd_link_i
-   , output [S:W][coh_noc_ral_link_width_lp-1:0] coh_lce_cmd_link_o
+   , input [SW:0][coh_noc_ral_link_width_lp-1:0]  coh_lce_cmd_link_i
+   , output [SW:0][coh_noc_ral_link_width_lp-1:0] coh_lce_cmd_link_o
 
-   , input [E:W][io_noc_ral_link_width_lp-1:0]   io_fwd_link_i
-   , output [E:W][io_noc_ral_link_width_lp-1:0]  io_fwd_link_o
+   , input [E2:W2][io_noc_ral_link_width_lp-1:0]   io_fwd_link_i
+   , output [E2:W2][io_noc_ral_link_width_lp-1:0]  io_fwd_link_o
 
-   , input [E:W][io_noc_ral_link_width_lp-1:0]   io_rev_link_i
-   , output [E:W][io_noc_ral_link_width_lp-1:0]  io_rev_link_o
+   , input [E2:W2][io_noc_ral_link_width_lp-1:0]   io_rev_link_i
+   , output [E2:W2][io_noc_ral_link_width_lp-1:0]  io_rev_link_o
    );
 
   `declare_bsg_ready_and_link_sif_s(coh_noc_flit_width_p, bp_coh_ready_and_link_s);
diff --git a/bp_top/src/v/bp_mem_complex.sv b/bp_top/src/v/bp_mem_complex.sv
index 956e4b8c..6287e24d 100644
--- a/bp_top/src/v/bp_mem_complex.sv
+++ b/bp_top/src/v/bp_mem_complex.sv
@@ -13,6 +13,13 @@ module bp_mem_complex
 
    , localparam coh_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(coh_noc_flit_width_p)
    , localparam mem_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(mem_noc_flit_width_p)
+    //typedef enum logic[2:0] {P=3'd0, W, E, N, S} Dirs;
+    // recalculate assuming W = 0 and S = 0
+   , parameter logic [2:0] W2 = 0 /*W-W*/
+   , parameter logic [2:0] E2 = E-W
+   , parameter logic [2:0] S2 = 0 /*S-S*/
+   , parameter logic [2:0] N2 = S-N /*S is larger*/
+   , parameter logic [2:0] SW2 = S-W /*S is larger*/
    )
   (input                                                     core_clk_i
    , input                                                   core_reset_i
@@ -44,19 +51,19 @@ module bp_mem_complex
   `declare_bsg_ready_and_link_sif_s(coh_noc_flit_width_p, bp_coh_ready_and_link_s);
   `declare_bsg_ready_and_link_sif_s(mem_noc_flit_width_p, bp_mem_ready_and_link_s);
 
-  bp_coh_ready_and_link_s [mc_x_dim_p-1:0][S:W] lce_req_link_li, lce_req_link_lo;
-  bp_coh_ready_and_link_s [E:W]                 lce_req_hor_link_li, lce_req_hor_link_lo;
-  bp_coh_ready_and_link_s [S:N][mc_x_dim_p-1:0] lce_req_ver_link_li, lce_req_ver_link_lo;
-  bp_coh_ready_and_link_s [mc_x_dim_p-1:0][S:W] lce_cmd_link_li, lce_cmd_link_lo;
-  bp_coh_ready_and_link_s [E:W]                 lce_cmd_hor_link_li, lce_cmd_hor_link_lo;
-  bp_coh_ready_and_link_s [S:N][mc_x_dim_p-1:0] lce_cmd_ver_link_li, lce_cmd_ver_link_lo;
-  bp_coh_ready_and_link_s [mc_x_dim_p-1:0][S:W] lce_resp_link_li, lce_resp_link_lo;
-  bp_coh_ready_and_link_s [E:W]                 lce_resp_hor_link_li, lce_resp_hor_link_lo;
-  bp_coh_ready_and_link_s [S:N][mc_x_dim_p-1:0] lce_resp_ver_link_li, lce_resp_ver_link_lo;
+  bp_coh_ready_and_link_s [mc_x_dim_p-1:0][SW2:0] lce_req_link_li, lce_req_link_lo;
+  bp_coh_ready_and_link_s [E2:W2]                 lce_req_hor_link_li, lce_req_hor_link_lo;
+  bp_coh_ready_and_link_s [N2:S2][mc_x_dim_p-1:0] lce_req_ver_link_li, lce_req_ver_link_lo;
+  bp_coh_ready_and_link_s [mc_x_dim_p-1:0][SW2:0] lce_cmd_link_li, lce_cmd_link_lo;
+  bp_coh_ready_and_link_s [E2:W2]                 lce_cmd_hor_link_li, lce_cmd_hor_link_lo;
+  bp_coh_ready_and_link_s [N2:S2][mc_x_dim_p-1:0] lce_cmd_ver_link_li, lce_cmd_ver_link_lo;
+  bp_coh_ready_and_link_s [mc_x_dim_p-1:0][SW2:0] lce_resp_link_li, lce_resp_link_lo;
+  bp_coh_ready_and_link_s [E2:W2]                 lce_resp_hor_link_li, lce_resp_hor_link_lo;
+  bp_coh_ready_and_link_s [N2:S2][mc_x_dim_p-1:0] lce_resp_ver_link_li, lce_resp_ver_link_lo;
 
   bp_mem_ready_and_link_s [mc_x_dim_p-1:0] mem_fwd_link_li, mem_fwd_link_lo;
   bp_mem_ready_and_link_s [mc_x_dim_p-1:0] mem_rev_link_li, mem_rev_link_lo;
-  bp_mem_ready_and_link_s [S:N][mc_x_dim_p-1:0] mem_ver_link_li, mem_ver_link_lo;
+  bp_mem_ready_and_link_s [N2:S2][mc_x_dim_p-1:0] mem_ver_link_li, mem_ver_link_lo;
 
   for (genvar i = 0; i < mc_x_dim_p; i++)
     begin : node
@@ -108,8 +115,8 @@ module bp_mem_complex
 
   if (mc_y_dim_p > 0)
     begin : stitch
-      assign lce_req_ver_link_li[N] = coh_req_link_i;
-      assign lce_req_ver_link_li[S] = '0;
+      assign lce_req_ver_link_li[S2] = coh_req_link_i;
+      assign lce_req_ver_link_li[N2-1] = '0;
       assign lce_req_hor_link_li    = '0;
       bsg_mesh_stitch
        #(.width_p(coh_noc_ral_link_width_lp)
@@ -125,10 +132,10 @@ module bp_mem_complex
          ,.ver_i(lce_req_ver_link_li)
          ,.ver_o(lce_req_ver_link_lo)
          );
-      assign coh_req_link_o = lce_req_ver_link_lo[N];
+      assign coh_req_link_o = lce_req_ver_link_lo[S2];
 
-      assign lce_cmd_ver_link_li[N] = coh_cmd_link_i;
-      assign lce_cmd_ver_link_li[S] = '0;
+      assign lce_cmd_ver_link_li[S2] = coh_cmd_link_i;
+      assign lce_cmd_ver_link_li[N2-1] = '0;
       assign lce_cmd_hor_link_li    = '0;
       bsg_mesh_stitch
        #(.width_p(coh_noc_ral_link_width_lp)
@@ -144,10 +151,10 @@ module bp_mem_complex
          ,.ver_i(lce_cmd_ver_link_li)
          ,.ver_o(lce_cmd_ver_link_lo)
          );
-      assign coh_cmd_link_o = lce_cmd_ver_link_lo[N];
+      assign coh_cmd_link_o = lce_cmd_ver_link_lo[S2];
 
-      assign lce_resp_ver_link_li[N] = coh_resp_link_i;
-      assign lce_resp_ver_link_li[S] = '0;
+      assign lce_resp_ver_link_li[S2] = coh_resp_link_i;
+      assign lce_resp_ver_link_li[N2-1] = '0;
       assign lce_resp_hor_link_li    = '0;
       bsg_mesh_stitch
        #(.width_p(coh_noc_ral_link_width_lp)
@@ -163,18 +170,18 @@ module bp_mem_complex
          ,.ver_i(lce_resp_ver_link_li)
          ,.ver_o(lce_resp_ver_link_lo)
          );
-      assign coh_resp_link_o = lce_resp_ver_link_lo[N];
+      assign coh_resp_link_o = lce_resp_ver_link_lo[S2];
 
       bp_mem_ready_and_link_s [mc_x_dim_p-1:0][S:W] mem_mesh_lo, mem_mesh_li;
       for (genvar j = 0; j < mc_x_dim_p; j++)
         begin : link
-          assign mem_mesh_lo[j][S] = mem_fwd_link_lo[j];
-          assign mem_mesh_lo[j][N] = mem_rev_link_lo[j];
+          assign mem_mesh_lo[j][N2-1] = mem_fwd_link_lo[j];
+          assign mem_mesh_lo[j][S2] = mem_rev_link_lo[j];
 
-          assign mem_fwd_link_li[j] = mem_mesh_li[j][N];
-          assign mem_rev_link_li[j] = mem_mesh_li[j][S];
+          assign mem_fwd_link_li[j] = mem_mesh_li[j][S2];
+          assign mem_rev_link_li[j] = mem_mesh_li[j][N2-1];
         end
-      assign mem_ver_link_li[N] = mem_fwd_link_i;
+      assign mem_ver_link_li[S2] = mem_fwd_link_i;
       bsg_mesh_stitch
        #(.width_p($bits(bp_mem_ready_and_link_s))
          ,.x_max_p(mc_x_dim_p)
@@ -189,7 +196,7 @@ module bp_mem_complex
          ,.ver_i(mem_ver_link_li)
          ,.ver_o(mem_ver_link_lo)
          );
-      assign mem_rev_link_o = mem_ver_link_lo[N];
+      assign mem_rev_link_o = mem_ver_link_lo[S2];
     end
   else
     begin : stub
@@ -197,12 +204,12 @@ module bp_mem_complex
       assign coh_cmd_link_o = '0;
       assign coh_resp_link_o = '0;
 
-      assign mem_ver_link_lo[S] = mem_fwd_link_i;
-      assign mem_rev_link_o = mem_ver_link_li[S];
+      assign mem_ver_link_lo[N2-1] = mem_fwd_link_i;
+      assign mem_rev_link_o = mem_ver_link_li[N2-1];
     end
 
-  assign mem_dma_link_o = mem_ver_link_lo[S];
-  assign mem_ver_link_li[S] = mem_dma_link_i;
+  assign mem_dma_link_o = mem_ver_link_lo[N2-1];
+  assign mem_ver_link_li[N2-1] = mem_dma_link_i;
 
 endmodule
 
diff --git a/bp_top/src/v/bp_multicore.sv b/bp_top/src/v/bp_multicore.sv
index e455bf7f..bf12ffda 100644
--- a/bp_top/src/v/bp_multicore.sv
+++ b/bp_top/src/v/bp_multicore.sv
@@ -21,6 +21,12 @@ module bp_multicore
    , localparam coh_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(coh_noc_flit_width_p)
    , localparam mem_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(mem_noc_flit_width_p)
    , localparam io_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(io_noc_flit_width_p)
+    //typedef enum logic[2:0] {P=3'd0, W, E, N, S} Dirs;
+    // recalculate assuming W = 0 and S = 0
+   , parameter logic [2:0] W2 = 0 /*W-W*/
+   , parameter logic [2:0] E2 = E-W
+   , parameter logic [2:0] S2 = 0 /*S-S*/
+   , parameter logic [2:0] N2 = S-N /*S is larger*/
    )
   (input                                                    core_clk_i
    , input                                                  rt_clk_i
@@ -38,11 +44,11 @@ module bp_multicore
    , input [io_noc_did_width_p-1:0]                         my_did_i
    , input [io_noc_did_width_p-1:0]                         host_did_i
 
-   , input  [E:W][io_noc_ral_link_width_lp-1:0]             io_fwd_link_i
-   , output [E:W][io_noc_ral_link_width_lp-1:0]             io_fwd_link_o
+   , input  [E2:W2][io_noc_ral_link_width_lp-1:0]             io_fwd_link_i
+   , output [E2:W2][io_noc_ral_link_width_lp-1:0]             io_fwd_link_o
 
-   , input  [E:W][io_noc_ral_link_width_lp-1:0]             io_rev_link_i
-   , output [E:W][io_noc_ral_link_width_lp-1:0]             io_rev_link_o
+   , input  [E2:W2][io_noc_ral_link_width_lp-1:0]             io_rev_link_i
+   , output [E2:W2][io_noc_ral_link_width_lp-1:0]             io_rev_link_o
 
    , output [mc_x_dim_p-1:0][mem_noc_ral_link_width_lp-1:0] mem_dma_link_o
    , input [mc_x_dim_p-1:0][mem_noc_ral_link_width_lp-1:0]  mem_dma_link_i
@@ -53,28 +59,28 @@ module bp_multicore
   `declare_bsg_ready_and_link_sif_s(io_noc_flit_width_p, bp_io_ready_and_link_s);
   `declare_bsg_ready_and_link_sif_s(mem_noc_flit_width_p, bp_mem_ready_and_link_s);
 
-  bp_coh_ready_and_link_s [E:W][cc_y_dim_p-1:0] coh_req_hor_link_li, coh_req_hor_link_lo;
-  bp_coh_ready_and_link_s [E:W][cc_y_dim_p-1:0] coh_cmd_hor_link_li, coh_cmd_hor_link_lo;
-  bp_coh_ready_and_link_s [E:W][cc_y_dim_p-1:0] coh_fill_hor_link_li, coh_fill_hor_link_lo;
-  bp_coh_ready_and_link_s [E:W][cc_y_dim_p-1:0] coh_resp_hor_link_li, coh_resp_hor_link_lo;
+  bp_coh_ready_and_link_s [E2:W2][cc_y_dim_p-1:0] coh_req_hor_link_li, coh_req_hor_link_lo;
+  bp_coh_ready_and_link_s [E2:W2][cc_y_dim_p-1:0] coh_cmd_hor_link_li, coh_cmd_hor_link_lo;
+  bp_coh_ready_and_link_s [E2:W2][cc_y_dim_p-1:0] coh_fill_hor_link_li, coh_fill_hor_link_lo;
+  bp_coh_ready_and_link_s [E2:W2][cc_y_dim_p-1:0] coh_resp_hor_link_li, coh_resp_hor_link_lo;
 
-  bp_coh_ready_and_link_s [S:N][cc_x_dim_p-1:0] coh_req_ver_link_li, coh_req_ver_link_lo;
-  bp_coh_ready_and_link_s [S:N][cc_x_dim_p-1:0] coh_cmd_ver_link_li, coh_cmd_ver_link_lo;
-  bp_coh_ready_and_link_s [S:N][cc_x_dim_p-1:0] coh_fill_ver_link_li, coh_fill_ver_link_lo;
-  bp_coh_ready_and_link_s [S:N][cc_x_dim_p-1:0] coh_resp_ver_link_li, coh_resp_ver_link_lo;
+  bp_coh_ready_and_link_s [N2:S2][cc_x_dim_p-1:0] coh_req_ver_link_li, coh_req_ver_link_lo;
+  bp_coh_ready_and_link_s [N2:S2][cc_x_dim_p-1:0] coh_cmd_ver_link_li, coh_cmd_ver_link_lo;
+  bp_coh_ready_and_link_s [N2:S2][cc_x_dim_p-1:0] coh_fill_ver_link_li, coh_fill_ver_link_lo;
+  bp_coh_ready_and_link_s [N2:S2][cc_x_dim_p-1:0] coh_resp_ver_link_li, coh_resp_ver_link_lo;
 
-  bp_mem_ready_and_link_s [N:N][cc_x_dim_p-1:0] mem_fwd_ver_link_li, mem_rev_ver_link_lo;
-  bp_mem_ready_and_link_s [S:S][cc_x_dim_p-1:0] mem_rev_ver_link_li, mem_fwd_ver_link_lo;
+  bp_mem_ready_and_link_s [cc_x_dim_p-1:0] mem_fwd_ver_link_li, mem_rev_ver_link_lo;
+  bp_mem_ready_and_link_s [cc_x_dim_p-1:0] mem_rev_ver_link_li, mem_fwd_ver_link_lo;
 
   // IO and SACC complexes only use Req/Cmd networks
-  assign coh_resp_ver_link_li[N] = '0;
-  assign coh_resp_hor_link_li[W] = '0;
-  assign coh_fill_ver_link_li[N] = '0;
-  assign coh_fill_hor_link_li[W] = '0;
+  assign coh_resp_ver_link_li[S2] = '0;
+  assign coh_resp_hor_link_li[W2] = '0;
+  assign coh_fill_ver_link_li[S2] = '0;
+  assign coh_fill_hor_link_li[W2] = '0;
   // Memory complex does not use Fill network
-  assign coh_fill_ver_link_li[S] = '0;
+  assign coh_fill_ver_link_li[N2-1] = '0;
 
-  assign mem_fwd_ver_link_li[N] = '0;
+  assign mem_fwd_ver_link_li = '0;
   bp_core_complex
    #(.bp_params_p(bp_params_p))
    cc
@@ -137,11 +143,11 @@ module bp_multicore
      ,.my_did_i(my_did_i)
      ,.host_did_i(host_did_i)
 
-     ,.coh_req_link_i(coh_req_ver_link_lo[N])
-     ,.coh_req_link_o(coh_req_ver_link_li[N])
+     ,.coh_req_link_i(coh_req_ver_link_lo[S2])
+     ,.coh_req_link_o(coh_req_ver_link_li[S2])
 
-     ,.coh_cmd_link_i(coh_cmd_ver_link_lo[N])
-     ,.coh_cmd_link_o(coh_cmd_ver_link_li[N])
+     ,.coh_cmd_link_i(coh_cmd_ver_link_lo[S2])
+     ,.coh_cmd_link_o(coh_cmd_ver_link_li[S2])
 
      ,.io_fwd_link_i(io_fwd_link_i)
      ,.io_fwd_link_o(io_fwd_link_o)
@@ -164,14 +170,14 @@ module bp_multicore
 
      ,.my_did_i(my_did_i)
 
-     ,.coh_req_link_i(coh_req_ver_link_lo[S])
-     ,.coh_req_link_o(coh_req_ver_link_li[S])
+     ,.coh_req_link_i(coh_req_ver_link_lo[N2-1])
+     ,.coh_req_link_o(/*coh_req_ver_link_li[N2-1]*/)
 
-     ,.coh_cmd_link_i(coh_cmd_ver_link_lo[S])
-     ,.coh_cmd_link_o(coh_cmd_ver_link_li[S])
+     ,.coh_cmd_link_i(coh_cmd_ver_link_lo[N2-1])
+     ,.coh_cmd_link_o(/*coh_cmd_ver_link_li[N2-1]*/)
 
-     ,.coh_resp_link_i(coh_resp_ver_link_lo[S])
-     ,.coh_resp_link_o(coh_resp_ver_link_li[S])
+     ,.coh_resp_link_i(coh_resp_ver_link_lo[N2-1])
+     ,.coh_resp_link_o(/*coh_resp_ver_link_li[N2-1]*/)
 
      ,.mem_fwd_link_i(mem_fwd_ver_link_lo)
      ,.mem_rev_link_o(mem_rev_ver_link_li)
@@ -189,17 +195,17 @@ module bp_multicore
      ,.coh_clk_i(coh_clk_i)
      ,.coh_reset_i(coh_reset_i)
 
-     ,.coh_req_link_i(coh_req_hor_link_lo[E])
-     ,.coh_req_link_o(coh_req_hor_link_li[E])
+     ,.coh_req_link_i(coh_req_hor_link_lo[E2-1])
+     ,.coh_req_link_o(/*coh_req_hor_link_li[E2-1]*/)
 
-     ,.coh_cmd_link_i(coh_cmd_hor_link_lo[E])
-     ,.coh_cmd_link_o(coh_cmd_hor_link_li[E])
+     ,.coh_cmd_link_i(coh_cmd_hor_link_lo[E2-1])
+     ,.coh_cmd_link_o(/*coh_cmd_hor_link_li[E2-1]*/)
 
-     ,.coh_fill_link_i(coh_fill_hor_link_lo[E])
-     ,.coh_fill_link_o(coh_fill_hor_link_li[E])
+     ,.coh_fill_link_i(coh_fill_hor_link_lo[E2-1])
+     ,.coh_fill_link_o(/*coh_fill_hor_link_li[E2-1]*/)
 
-     ,.coh_resp_link_i(coh_resp_hor_link_lo[E])
-     ,.coh_resp_link_o(coh_resp_hor_link_li[E])
+     ,.coh_resp_link_i(coh_resp_hor_link_lo[E2-1])
+     ,.coh_resp_link_o(/*coh_resp_hor_link_li[E2-1]*/)
      );
 
   bp_sacc_complex
@@ -211,11 +217,11 @@ module bp_multicore
      ,.coh_clk_i(coh_clk_i)
      ,.coh_reset_i(coh_reset_i)
 
-     ,.coh_req_link_i(coh_req_hor_link_lo[W])
-     ,.coh_req_link_o(coh_req_hor_link_li[W])
+     ,.coh_req_link_i(coh_req_hor_link_lo[W2])
+     ,.coh_req_link_o(coh_req_hor_link_li[W2])
 
-     ,.coh_cmd_link_i(coh_cmd_hor_link_lo[W])
-     ,.coh_cmd_link_o(coh_cmd_hor_link_li[W])
+     ,.coh_cmd_link_i(coh_cmd_hor_link_lo[W2])
+     ,.coh_cmd_link_o(coh_cmd_hor_link_li[W2])
      );
 
 endmodule
diff --git a/bp_top/src/v/bp_sacc_complex.sv b/bp_top/src/v/bp_sacc_complex.sv
index 98e15dbc..8887b516 100644
--- a/bp_top/src/v/bp_sacc_complex.sv
+++ b/bp_top/src/v/bp_sacc_complex.sv
@@ -12,6 +12,13 @@ module bp_sacc_complex
    `declare_bp_proc_params(bp_params_p)
 
    , localparam coh_noc_ral_link_width_lp = `bsg_ready_and_link_sif_width(coh_noc_flit_width_p)
+    //typedef enum logic[2:0] {P=3'd0, W, E, N, S} Dirs;
+    // recalculate assuming W = 0 and S = 0
+   , parameter logic [2:0] W2 = 0 /*W-W*/
+   , parameter logic [2:0] E2 = E-W
+   , parameter logic [2:0] S2 = 0 /*S-S*/
+   , parameter logic [2:0] N2 = S-N /*S is larger*/
+   , parameter logic [2:0] SW2 = S-W /*S is larger*/
    )
   (input                                                        core_clk_i
    , input                                                      core_reset_i
@@ -29,13 +36,13 @@ module bp_sacc_complex
 
   `declare_bsg_ready_and_link_sif_s(coh_noc_flit_width_p, bp_coh_ready_and_link_s);
 
-  bp_coh_ready_and_link_s [sac_y_dim_p-1:0][S:W] lce_req_link_li, lce_req_link_lo;
-  bp_coh_ready_and_link_s [E:W][sac_y_dim_p-1:0] lce_req_hor_link_li, lce_req_hor_link_lo;
-  bp_coh_ready_and_link_s [S:N]                  lce_req_ver_link_li, lce_req_ver_link_lo;
+  bp_coh_ready_and_link_s [sac_y_dim_p-1:0][SW2:0] lce_req_link_li, lce_req_link_lo;
+  bp_coh_ready_and_link_s [E2:W2][sac_y_dim_p-1:0] lce_req_hor_link_li, lce_req_hor_link_lo;
+  bp_coh_ready_and_link_s [N2:S2]                  lce_req_ver_link_li, lce_req_ver_link_lo;
 
-  bp_coh_ready_and_link_s [sac_y_dim_p-1:0][S:W] lce_cmd_link_li, lce_cmd_link_lo;
-  bp_coh_ready_and_link_s [E:W][sac_y_dim_p-1:0] lce_cmd_hor_link_li, lce_cmd_hor_link_lo;
-  bp_coh_ready_and_link_s [S:N]                  lce_cmd_ver_link_li, lce_cmd_ver_link_lo;
+  bp_coh_ready_and_link_s [sac_y_dim_p-1:0][SW2:0] lce_cmd_link_li, lce_cmd_link_lo;
+  bp_coh_ready_and_link_s [E2:W2][sac_y_dim_p-1:0] lce_cmd_hor_link_li, lce_cmd_hor_link_lo;
+  bp_coh_ready_and_link_s [N2:S2]                  lce_cmd_ver_link_li, lce_cmd_ver_link_lo;
 
 
   for (genvar j=0; j < sac_y_dim_p; j++)
@@ -74,8 +81,8 @@ module bp_sacc_complex
   if (sac_x_dim_p > 0)
     begin : sac_stitch
       assign lce_req_ver_link_li    = '0;
-      assign lce_req_hor_link_li[W] = '0;
-      assign lce_req_hor_link_li[E] = coh_req_link_i;
+      assign lce_req_hor_link_li[W2] = '0;
+      assign lce_req_hor_link_li[E2] = coh_req_link_i;
       bsg_mesh_stitch
        #(.width_p(coh_noc_ral_link_width_lp)
          ,.x_max_p(sac_x_dim_p)
@@ -90,11 +97,11 @@ module bp_sacc_complex
          ,.ver_i(lce_req_ver_link_li)
          ,.ver_o(lce_req_ver_link_lo)
          );
-      assign coh_req_link_o = lce_req_hor_link_lo[E];
+      assign coh_req_link_o = lce_req_hor_link_lo[E2];
 
       assign lce_cmd_ver_link_li    = '0;
-      assign lce_cmd_hor_link_li[W] = '0;
-      assign lce_cmd_hor_link_li[E] = coh_cmd_link_i;
+      assign lce_cmd_hor_link_li[W2] = '0;
+      assign lce_cmd_hor_link_li[E2] = coh_cmd_link_i;
       bsg_mesh_stitch
        #(.width_p(coh_noc_ral_link_width_lp)
          ,.x_max_p(sac_x_dim_p)
@@ -109,7 +116,7 @@ module bp_sacc_complex
          ,.ver_i(lce_cmd_ver_link_li)
          ,.ver_o(lce_cmd_ver_link_lo)
          );
-      assign coh_cmd_link_o = lce_cmd_hor_link_lo[E];
+      assign coh_cmd_link_o = lce_cmd_hor_link_lo[E2];
     end
   else
     begin : stub
-- 
2.39.0

