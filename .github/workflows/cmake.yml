name: 'cmake'
run-name: ${{ github.event_name == 'workflow_dispatch' && github.ref_name || '' }}

# This Action is to minimally test the cmake-based build system

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GHA_CUSTOM_LINE_PREFIX: "â–Œ"

jobs:
  emit-workflow-info:
    name: Emit Workflow Info
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: [self-hosted, Linux, X64, gcp-custom-runners]
    container: 'bitnami/git:2.40.1-debian-11-r4'

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false
          fetch-depth: 1

  style-check:
    name: Style check
    runs-on: [self-hosted, Linux, X64, gcp-custom-runners]
    container: bitnami/git:2.40.1-debian-11-r4

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -y clang-format

  build-binaries:
    strategy:
      matrix:
        include:
          - name: 'Build Binaries'
            artifact-name: 'binaries'
            cc: 'gcc'
            cxx: 'g++'
            apt-extra-deps: 'gcc g++'
            build-binaries-args: ''
            debian-patch: false
    name: ${{ matrix.name }}
    runs-on: [self-hosted, Linux, X64, gcp-custom-runners]
    container: debian:bookworm
    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
      BUILD_BINARIES_ARGS: ${{ matrix.build-binaries-args }}
      CCACHE_DIR: "${{ github.workspace }}/.cache/"
      DEBIAN_FRONTEND: noninteractive
      GHA_MACHINE_TYPE: "n2-highmem-8"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false
          fetch-depth: 1

      - name: Set up common Debian configuration
        run: |
          ./.github/scripts/set-up-common-debian-configuration.sh
          ./.github/scripts/set-up-common-git-configuration.sh

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -y \
              ant \
              bison \
              build-essential \
              ccache \
              cmake \
              default-jre \
              flex \
              git \
              google-perftools \
              libffi-dev \
              libfl-dev \
              libgoogle-perftools-dev \
              libreadline-dev \
              pkg-config \
              python3 \
              python3-dev \
              python3-pip \
              python3-orderedmultidict \
              swig \
              tcl-dev \
              tclsh \
              uuid \
              uuid-dev \
              wget \
              ${{ matrix.apt-extra-deps }} \
              ;

      - name: Checkout submodules
        run: |
          git submodule sync
          git submodule update --depth 1 --init --recursive --checkout \
              third_party/{surelog,yosys} \
              ;

      - name: Apply Debian patch
        if: ${{ matrix.debian-patch }}
        run: |
          git -C third_party/yosys apply ../yosys_mod/yosys_debian.patch

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: cache_${{ matrix.artifact-name }}_${{ github.run_id }}
          restore-keys: cache_${{ matrix.artifact-name }}_

      - name: Build binaries
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          # CMake build
          make -f cmake-makefile

