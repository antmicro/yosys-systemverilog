name: Parsing Tests

on:
  workflow_call:
    inputs:
      surelog_branch:
        description: 'Surelog branch or URL'
        required: false
        type: string
        default: ''


env:
  GHA_CUSTOM_LINE_PREFIX: "â–Œ"
  TESTS_TO_SKIP: synthesis serv serv-minimal hello-uvm assignment-pattern Forever BitsCallOnType OneClass
    Continue AnonymousUnion ParameterUnpackedArray VoidFunction2Returns PatternStruct ImportedFunctionCallInModuleAndSubmodule
    VoidFunctionWithoutReturn cmake PutC OneThis CastInFunctionInGenBlock PatternType FunctionOutputArgument GetC ForkJoinTypes
    EnumFirstInInitial ImportFunction DpiChandle Disable EnumFirst TypedefOnFileLevel UnsizedConstantsParameterParsing Fork
    PatternInFunction ParameterUnpackedLogicArray SelectFromUnpackedInFunction PatternReplication
    VoidFunction MultiplePrints BitSelectPartSelectInFunction ImportPackageWithFunction ParameterPackedArray StringAssignment
    SystemFunctions ParameterDoubleUnderscoreInSvFrontend OutputSizeWithParameterOfInstanceInitializedByStructMember
    ParameterOfSizeOfParametrizedPort ParameterOfSizeOfParametrizedPortInSubmodule ParameterOfSizeOfPort StringAssignConcatenation
    StringLocalParamInitByConcatenation StringWithBackslash FunctionWithOverriddenParameter RealValue BitsCallOnParametetrizedTypeFromPackage
    AssignToUnpackedUnionFieldAndReadOtherField IndexedPartSelectInFor NestedPatternPassedAsPort StreamOp
    NestedStructArrayParameterInitializedByPatternPassedAsPort PartSelectInFor SelfSelectsInBitSelectAfterBitSelect
    StructArrayParameterInitializedByPatternPassedAsPort SelectGivenBySelectOnParameterInFunction StreamOperatorBitReverseFunction

jobs:
  tests-read-uhdm:
    name: Surelog
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:jammy
    strategy:
      fail-fast: false
    env:
      GIT_HTTP_LOW_SPEED_LIMIT: 1
      GIT_HTTP_LOW_SPEED_TIME: 600
      DEBIAN_FRONTEND: noninteractive
      GHA_MACHINE_TYPE: "n2-standard-2"
      PARSER: surelog

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up common Ubuntu configuration
        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -y \
              ant \
              build-essential \
              cmake \
              default-jre \
              flex \
              git \
              google-perftools \
              libfl-dev \
              libgoogle-perftools-dev \
              llvm-15 \
              python3 \
              python3-dev \
              swig \
              tcl-dev \
              tclsh \
              uuid \
              uuid-dev \
              ;
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1

      - name: Checkout submodules
        run: |
          git submodule update --depth 1 --init --recursive \
              third_party/surelog \
              ;

      - name: Override submodule revisions (if requested)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.surelog_branch != ''}}
        env:
          SURELOG_BRANCH_SPEC: ${{inputs.surelog_branch}}
        run: |
          source ./.github/scripts/submodule-revision-override.inc.bash
          override-submodule-if-requested \
              'third_party/surelog' \
              "$surelog_default_gh_user" "$surelog_default_gh_repo" \
              "$SURELOG_BRANCH_SPEC"

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries-asan

      # See https://github.com/actions/upload-artifact/issues/38
      - name: Extract
        run: tar -xf binaries-asan.tar

      - name: Build & Test (yosys)
        env:
          TARGET: uhdm/yosys/test-ast
        run: |
          ./.github/scripts/run_group_test.sh \
              ./build/parsing/read-uhdm \
              ./build/parsing/test-results-uhdm.log \
              ;

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: parsing_test-results
          path: build/parsing/test-results-uhdm.log
          retention-days: 1

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: parsing_read-uhdm_logs
          path: build/parsing/read-uhdm/*/*.log

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: parsing_read-uhdm_yosys-sv
          path: build/parsing/read-uhdm/*/yosys.sv

      - name: Upload load graphs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: plots
          path: |
            **/plot_*.svg

  tests-read-systemverilog:
    name: SystemVerilog Plugin
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:jammy
    strategy:
      fail-fast: false
    env:
      GIT_HTTP_LOW_SPEED_LIMIT: 1
      GIT_HTTP_LOW_SPEED_TIME: 600
      DEBIAN_FRONTEND: noninteractive
      GHA_MACHINE_TYPE: "n2-standard-2"
      PARSER: yosys-plugin

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up common Ubuntu configuration
        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -y \
              ant \
              build-essential \
              cmake \
              default-jre \
              flex \
              git \
              google-perftools \
              libfl-dev \
              libgoogle-perftools-dev \
              llvm-15 \
              python3 \
              python3-dev \
              swig \
              tcl-dev \
              tclsh \
              uuid \
              uuid-dev \
              ;
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1

      - name: Checkout submodules
        run: |
          git submodule update --depth 1 --init --recursive \
              third_party/surelog \
              ;

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries-asan

      - name: Override submodule revisions (if requested)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.surelog_branch != ''}}
        env:
          SURELOG_BRANCH_SPEC: ${{inputs.surelog_branch}}
        run: |
          source ./.github/scripts/submodule-revision-override.inc.bash
          override-submodule-if-requested \
              'third_party/surelog' \
              "$surelog_default_gh_user" "$surelog_default_gh_repo" \
              "$SURELOG_BRANCH_SPEC"

      # See https://github.com/actions/upload-artifact/issues/38
      - name: Extract
        run: tar -xf binaries-asan.tar

      - name: Build & Test (yosys)
        env:
          TARGET: uhdm/yosys/test-ast
        run: |
          ./.github/scripts/run_group_test.sh \
              ./build/parsing/read-systemverilog \
              ./build/parsing/test-results-systemverilog.log \
              ;

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: parsing_test-results
          path: ./build/parsing/test-results-systemverilog.log
          retention-days: 1

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: parsing_read-systemverilog_logs
          path: build/parsing/read-systemverilog/*/*.log

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: parsing_read-systemverilog_yosys-sv
          path: build/parsing/read-systemverilog/*/yosys.sv

      - name: Upload load graphs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: plots
          path: |
            **/plot_*.svg

  push-logs:
    name: Generate AST diff
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:jammy
    needs:
      - tests-read-systemverilog
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download test results
        uses: /actions/download-artifact@v3
        with:
          name: parsing_read-systemverilog_logs
          path: logs

      - name: Set up common Ubuntu configuration
        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -y git

      - name: Generate push branch name
        run: |
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          PUSH_BRANCH=$branch
          if [[ ! -z "$SURELOG_BRANCH_SPEC" ]]; then
            PUSH_BRANCH="${PUSH_BRANCH}+tests+${SURELOG_BRANCH_SPEC}"
          fi
          echo "PUSH_BRANCH=$PUSH_BRANCH" >> "$GITHUB_ENV"
          CURRENT_LOGS_SHA=$(git ls-remote https://github.com/${{ github.repository }}-logs master | cut -d $'\t' -f1)
          COMMENT_MSG="https://github.com/${{ github.repository }}-logs/compare/$CURRENT_LOGS_SHA..$PUSH_BRANCH"
          echo "COMMENT_MSG=$COMMENT_MSG" >> "$GITHUB_ENV"
          echo "COMMENT_HEADER=Logs difference between main branch:" >> "$GITHUB_ENV"
        env:
          SURELOG_BRANCH_SPEC: ${{inputs.surelog_branch}}

      - name: Post comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number
            });
            const newFirstLine = process.env.COMMENT_HEADER;
            const newComment = newFirstLine + '\n' + process.env.COMMENT_MSG;
            let commentUpdated = false;
            for (const comment of comments) {
              const oldFirstLine = comment.body.split('\n')[0];
              if (oldFirstLine == newFirstLine) {
                github.rest.issues.updateComment({
                  comment_id: comment.id,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: newComment
                });
                commentUpdated = true;
                break;
              }
            }
            if (!commentUpdated) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: newComment
              });
            }

  generate-tests-summary:
    name: Summary Generation
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:jammy
    if: ${{ !cancelled() }}
    needs:
      - tests-read-uhdm
      - tests-read-systemverilog

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up common Ubuntu configuration
        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh

      - name: Download test results
        uses: /actions/download-artifact@v3
        with:
          name: parsing_test-results

      - name: Generate summary
        run: |
          ./.github/scripts/generate_summary.sh
