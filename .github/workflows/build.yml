name: Build

on:
  workflow_call:
    inputs:
      surelog_branch:
        description: 'Surelog branch or URL'
        required: false
        type: string
        default: ''

env:
  GHA_CUSTOM_LINE_PREFIX: "â–Œ"

jobs:
  build-binaries:
    strategy:
      matrix:
        include:
          - name: 'Build binaries'
            artifact-name: 'binaries'
            cc: 'gcc'
            cxx: 'g++'
            apt-extra-deps: 'gcc g++'
            build-binaries-args: 'SYSTEMVERILOG_PLUGIN_ONLY:=0'
          - name: 'Build binaries (ASAN)'
            artifact-name: 'binaries-asan'
            cc: 'clang-15'
            cxx: 'clang++-15'
            apt-extra-deps: 'clang-15'
            build-binaries-args: 'ENABLE_ASAN:=1'
    name: ${{ matrix.name }}
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:jammy
    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
      BUILD_BINARIES_ARGS: ${{ matrix.build-binaries-args }}
      CCACHE_DIR: "/root/yosys-uhdm-plugin-integration/yosys-uhdm-plugin-integration/.cache/"
      DEBIAN_FRONTEND: noninteractive
      GHA_MACHINE_TYPE: "n2-highmem-8"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false
          fetch-depth: 1

      - name: Set up common Ubuntu configuration
        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -y \
              ant \
              bison \
              build-essential \
              ccache \
              cmake \
              default-jre \
              flex \
              git \
              google-perftools \
              libffi-dev \
              libfl-dev \
              libgoogle-perftools-dev \
              libreadline-dev \
              pkg-config \
              python3 \
              python3-dev \
              python3-pip \
              swig \
              tcl-dev \
              tclsh \
              uuid \
              uuid-dev \
              wget \
              ${{ matrix.apt-extra-deps }} \
              ;
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
          pip install --upgrade pip
          pip install orderedmultidict
          pip install cmake

      - name: Checkout submodules
        run: |
          git submodule update --depth 1 --init --recursive \
              third_party/surelog \
              third_party/yosys \
              third_party/yosys_f4pga_plugins \
              ;

      - name: Override submodule revisions (if requested)
        if: ${{ inputs.surelog_branch != ''}}
        env:
          SURELOG_BRANCH_SPEC: ${{inputs.surelog_branch}}
        run: |
          source ./.github/scripts/submodule-revision-override.inc.bash
          override-submodule-if-requested \
              'third_party/surelog' \
              "$surelog_default_gh_user" "$surelog_default_gh_repo" \
              "$SURELOG_BRANCH_SPEC"

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: cache_${{ matrix.artifact-name }}_${{ github.run_id }}
          restore-keys: cache_${{ matrix.artifact-name }}_

      - name: Build binaries
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          make -rR -j$(nproc) -Oline -f build_binaries.mk ${BUILD_BINARIES_ARGS} \
              install-surelog install-yosys install-plugins
          # By default actions/upload-artifact@v2 do not preserve file permissions
          # tar directory to workaround this issue
          # See https://github.com/actions/upload-artifact/issues/38
          tar -cvf ${{ matrix.artifact-name }}.tar image

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact-name }}
          path: |
            ${{ matrix.artifact-name }}.tar

      - name: Upload load graphs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v2
        with:
          name: plots
          path: |
            **/plot_*.svg

  build-sv2v:
    name: Build sv2v
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:jammy
    env:
      DEBIAN_FRONTEND: noninteractive
      GHA_MACHINE_TYPE: "n2-standard-4"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false
          fetch-depth: 1

      - name: Set up common Ubuntu configuration
        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -y \
              git \
              wget \
              ;

      - name: 'Read submodule revisions'
        id: rev
        run: |
           CACHE_HASH_LENGTH=20
           repo_hash="$(git submodule status third_party/sv2v)"
           # Skip first character which is ' ' or '+'
           repo_hash="${repo_hash:1:$CACHE_HASH_LENGTH}"
           printf '::set-output name=%s::%s\n' 'sv2v-submodule-rev' "${repo_hash}"

      - name: Try restoring build results from cache
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: image/bin/sv2v
          key: sv2v@${{ steps.rev.outputs.sv2v-submodule-rev }}

      - name: Checkout submodules
        if: ${{ steps.cache-restore.outputs.cache-hit != 'true' }}
        run: |
          git submodule update --depth 1 --init --recursive \
              third_party/sv2v \
              ;

      - name: Build binaries
        if: ${{ steps.cache-restore.outputs.cache-hit != 'true' }}
        run: |
          mkdir -p $PWD/image/bin
          export PATH=$PWD/install/bin:/usr/local/bin:${PATH}
          wget -qO- https://get.haskellstack.org/ | sh -s - -f -d /usr/local/bin
          make -j$(nproc) -C $PWD/sv2v
          cp $PWD/sv2v/bin/sv2v image/bin

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: sv2v
          path: |
            image/bin/sv2v

      - name: Save build results to cache
        if: ${{ steps.cache-restore.outputs.cache-hit != 'true' && ! (failure() || cancelled()) }}
        uses: actions/cache/save@v3
        with:
          path: image/bin/sv2v
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}

      - name: Upload load graphs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v2
        with:
          name: plots
          path: |
            **/plot_*.svg

